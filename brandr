#!/bin/bash
export XAUTHORITY=/home/$(whoami)/.Xauthority
RED='\e[41m'
BLUE='\e[44m'
ORANGE='\e[46m'
NC='\e[0m'

connected_monitors=$(xrandr -q | awk '/ connected/ {print $1}')
all_monitors=$(xrandr -q | awk '/connected/ {print $1}')
current_resolution=$(xrandr -q | awk '/*/ {print $1}')

in_array() {
    local haystack=${1}[@]
    local needle=${2}
    for i in ${!haystack}; do
        if [[ ${i} == ${needle} ]]; then
            return 0
        fi
    done
    return 1
}

function choose_monitor {
PS3="Choose monitor to operate on: "
# Gather the results in an array.
monitors=($all_monitors "proceed" "cancel")

select pick in "${monitors[@]}"
do
	case $pick in
		proceed)
			break
			;;
		cancel)
			exit
			;;		
		*)	
			picks+=("$pick")
			break
			;;		
	esac
done

if [[ $picks ]]; then
    echo "${picks[@]}"
    picks=()
fi
}

function choose_connected_monitor {
PS3="Choose monitor to operate on: "
# Gather the results in an array.
monitors=($connected_monitors "proceed" "cancel")

select pick in "${monitors[@]}"
do
	case $pick in
		proceed)
			break
			;;
		cancel)
			exit
			;;		
		*)	
			picks+=("$pick")
			break
			;;		
	esac
done

if [[ $picks ]]; then
    echo "${picks[@]}"
    picks=()
fi
}

function choose_resolution {
PS3="Choose new resolution: "
# Gather the results in an array.
chosen_monitor=$(choose_monitor)
next_monitor=$(xrandr -q | awk '/connected/ {print $1}' | sed -n "/$chosen_monitor/{n;p;}")
resolutions=($(xrandr -q | sed -n -e "/$chosen_monitor/,/$next_monitor/ p" | awk '{print $1}' | sed -e '1d;$d') "proceed" "cancel")

select pick in "${resolutions[@]}"
do
	case $pick in
		proceed)
			break
			;;
		cancel)
			exit
			;;		
		*)	
			picks+=("$pick")
			break
			;;		
	esac
done

if [[ $picks ]]; then
    printf 'Setting theme to %s\n' "${picks[*]}"
    xrandr --output $chosen_monitor --mode "${picks[@]}"
    picks=()
fi
}


function rotate_monitor {
PS3="Choose rotation: "
# Gather the results in an array.
chosen_monitor=$(choose_monitor)
action=("left" "right" "inverted" "normal" "proceed" "cancel")

select pick in "${action[@]}"
do
	case $pick in
		proceed)
			break
			;;
		cancel)
			exit
			;;		
		*)	
			picks+=("$pick")
			break
			;;		
	esac
done

if [[ $picks ]]; then
    printf 'Setting orientation to %s\n' "${picks[*]}"
    xrandr --output "$chosen_monitor" --rotate "${picks[@]}"
    picks=()
fi
}


function connect_monitor {
PS3="Choose monitor to connect or disconnect: "
# Gather the results in an array.
connected_monitors=($(xrandr -q | awk '/ connected/ {print $1}'))
chosen_monitor=$(choose_monitor)

if in_array connected_monitors $chosen_monitor; then
		xrandr --putput $chosen_monitor --off	
	else
		xrandr --output --auto $chosen_monitor 
fi
}

function choose_position {
positions=("left-of" "right-of" "above" "below" "same-as" "proceed" "cancel")
PS3="Where to place this monitor?: "
select pick in "${positions[@]}"
do
	case $pick in
		proceed)
			break
			;;
		cancel)
			exit
			;;		
		*)	
			picks+=("$pick")
			echo "${picks[@]}"
			break
			;;		
	esac
done
}

function move_monitor {
# Gather the results in an array.
chosen_monitor=$(choose_connected_monitor)
position=$(choose_position)
other_monitors=$(choose_connected_monitor)
xrandr --output $chosen_monitor --$position $other_monitor
}

function set_primary {
	xrandr --output $@ --primary
}

function main {
    while true; do
    clear
    echo ""
    echo -e "                             $NC ::Monitor:: $NC "
    echo ""
    echo -e ""
    echo -e " ┌────────────────────────────────────────────────────────────────────────────┐"
    echo -e " │  $NC  1 $NC  List monitors                       $NC  2 $NC  Set resolution            │"
    echo -e " │  $NC  3 $NC  Set primary monitor                 $NC  4 $NC  Position monitors         │"
    echo -e " │  $NC  5 $NC  Connect/disconnect monitor          $NC  6 $NC  Rotate monitor            │"    

    echo " └────────────────────────────────────────────────────────────────────────────┘"
        echo -e "    $NC Select a number and press [Enter]$NC $NC - 0 Exit$NC"
    echo ""
    read -s -n1 choix
    case $choix in
        1)
            echo
            xrandr -q
            echo ""
            echo -e "$NC Operation complete. To return to appearance menu press [Enter] $NC"
            read
            ;;
        2)
            echo
            choose_resolution
            echo ""
            echo -e "$NC Operation complete. To return to appearance menu press [Enter] $NC"
            read
            ;;
        3)
            echo
            set_primary
            echo ""
            echo -e "$NC Operation complete. To return to appearance menu press [Enter] $NC"
            read
            ;;
        4)
            echo
            move_monitor
            echo ""
            echo -e "$NC Operation complete. To return to appearance menu press [Enter] $NC"
            read
            ;;
        5)
            echo
            choose_monitor | connect_monitor
            echo ""
            echo -e "$NC Operation complete. To return to appearance menu press [Enter] $NC"
            read
            ;;
        6)
            echo
            rotate_monitor
            echo ""
            echo -e "$NC Operation complete. To return to appearance menu press [Enter] $NC"
            read
            ;;

        0)
            clear && exit
            read
            ;;
        *)
            echo -e "$RED Unknown option $NC"
            echo "Wait and try again later..."
            echo ""
            sleep 3
            clear
            ;;
    esac
    done
}

main
